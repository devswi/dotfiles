# ============================
# ======    General     ======
# ============================

# Reload configuration
bind C-r source-file ~/.tmux.conf \; display '~/.tmux.conf reloaded.'

set-option default-terminal "xterm-256color"
set -ag terminal-overrides ",xterm-256color:RGB"
set -as terminal-overrides ',*:Smulx=\E[4::%p1%dm'  # undercurl support
set -as terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m'  # underscore colours - needs tmux-3.0

set-option -g status-position top

set -s escape-time 0

# Remap prefix from 'C-b' to 'C-]'
unbind C-]
set-option -g prefix C-]
bind C-] send-prefix

# Set parent terminal title to reflect current window in tmux session
set -g set-titles on
set -g set-titles-string "#I:#W"

# re-number windows when one is closed
set -g renumber-windows on

# Start with window 1 (instead of 0)
set -g base-index 1

# Start with pane 1
setw -g pane-base-index 1

# Mouse behavior
set -g mouse on

#
# ============================
# ======  Key bindings  ======
# ============================

unbind n
unbind p
unbind '"'
unbind %
unbind "\$" # rename-session
unbind ,    # rename-window

# NAVIGATION - Window

# New window and retain cwd
bind c new-window -c "#{pane_current_path}"

bind space next-window
bind bspace previous-window
bind Tab last-window

bind enter next-layout

# Prompt to rename window right after it's created
set-hook -g after-new-window 'command-prompt -I "#{window_name}" "rename-window '%%'"'

# Rename session and window
bind r command-prompt -I "#{window_name}" "rename-window '%%'"
bind R command-prompt -I "#{session_name}" "rename-session '%%'"

# Use vim-like keys for splits and windows
bind | split-window -h -c "#{pane_curent_path}"
bind - split-window -v -c "#{pane_curent_path}"

# popup tmux
bind a run-shell "~/.local/bin/popuptmux.sh"

# Pane navigation
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Resize the pane
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r H resize-pane -L 5
bind -r L resize-pane -R 5

# Zoom pane
bind + resize-pane -Z

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h' 'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j' 'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k' 'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l' 'select-pane -R'

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R

#
bind = select-layout even-horizontal

# Kill pane/window/session shortcuts
bind x kill-pane
bind X kill-window
bind C-x confirm-before -p "kill other windows? (y/n)" "kill-window -a"
bind Q confirm-before -p "kill-session #S? (y/n)" kill-session

# Detach from session
bind d detach
bind D if -F '#{session_many_attached}' \
    'confirm-before -p "Detach other clients? (y/n)" "detach -a"' \
    'display "Session has only 1 client attached"'

setw -g mode-keys vi
set -g set-clipboard on
set -s set-clipboard on

set -g status-interval 1
set -g status-justify left
set -g monitor-activity on

# set -g clock-mode-style 24
set-window-option -g clock-mode-style 24

set-option -g status-style fg=#333333

set -g status-left "#[bg=#8CD5CA, fg=#24283B] î€‡ "
set -g status-right "#[fg=#7DCFFF]%a, %Y.%m.%d %H:%M:%S"
set -g status-left-length 320
set -g status-right-length 500

set -wg window-status-format " #I #W "
set -wg window-status-current-format " #I:#W#F "
set -wg window-status-separator ""
set-window-option -g window-status-style bg=#b7caf7
set-window-option -g window-status-activity-style bg=#b7caf7
set-window-option -g window-status-current-style bg=#8CAAEE

set -g message-style "bg=#24283b, fg=#b4f9f8"

